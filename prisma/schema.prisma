// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Books {
  id      Int      @id @default(autoincrement())
  bookName String
  authorName    String?
  published Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}


// Post Model
model Post {
  id Int @id @default(autoincrement())
  title String
  content String
  authorId Int
  author User @relation(fields: [authorId], references: [id])
  postCategory PostCategory[]
  published Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// User Model
model User {
  id Int @id @default(autoincrement())
  username String @unique
  email String
  role UserRole @default(user)
  profile Profile?
  post Post[]
  @@map("users")
}

// Profile Mode
model Profile {
  id Int @id @default(autoincrement())
  bio String?
  userId Int @unique
  user User @relation(fields: [userId], references: [id])
  @@map("profiles")
}

// User Role
enum UserRole {
  user 
  admin
}



// Category Model
model Category {
  id Int @id @default(autoincrement())
  name String
  postCategory PostCategory[]
}

// Primary Model or Table
model PostCategory{
  postId Int
  categoryId Int
  post Post @relation(fields: [postId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])
  @@id([postId, categoryId])
}